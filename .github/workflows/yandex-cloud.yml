name: Docker Image CI

on:
  push:
    branches: [ "main" ]

env:
  FRONTEND_IMAGE: ${{ secrets.DOCKER_HUB_USERNAME }}/text-to-image-frontend:${{ github.sha }}
  BACKEND_IMAGE: ${{ secrets.DOCKER_HUB_USERNAME }}/text-to-image-api:${{ github.sha }}
  NGINX_IMAGE: ${{ secrets.DOCKER_HUB_USERNAME }}/text-to-image-nginx:${{ github.sha }}

jobs:
  build-backend:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    
    - name: Login to Dockerhub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
    
    - name: Setup Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Build Backend
      uses: docker/build-push-action@v3
      with:
        context: ./src/backend
        file: ./src/backend/Dockerfile
        push: true
        tags: ${{ env.BACKEND_IMAGE }}

  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to Dockerhub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

          
      - name: Setup Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Frontend
        uses: docker/build-push-action@v3
        with:
          context: src/frontend
          file: ./src/frontend/Dockerfile
          push: true
          build-args: |
            server_url: ${{ secrets.API_SERVER_URL }}
          tags: ${{ env.FRONTEND_IMAGE }}

  build-nginx:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to Dockerhub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}


      - name: Setup Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Nginx for together composing
        uses: docker/build-push-action@v3
        with:
          context: ./nginx
          file: ./nginx/Dockerfile
          push: true
          tags: ${{ env.NGINX_IMAGE }}

  update-yc:
    runs-on: ubuntu-latest
    needs: [build-backend, build-frontend, build-nginx]
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Deploy COI VM
      id: deploy-coi
      uses: yc-actions/yc-coi-deploy@v1.0.1
      env:
        BACKEND_IMAGE: ${{ env.BACKEND_IMAGE }}
        FRONTEND_IMAGE: ${{ env.FRONTEND_IMAGE }}
        NGINX_IMAGE: ${{ env.NGINX_IMAGE }}
        FRONTEND_ORIGINS: ${{ secrets.FRONTEND_ORIGINS }}
        YC_VM_SSH: ${{ secrets.YC_VM_SSH }}
      with:
        yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
        folder-id: ${{ secrets.YC_FOLDER_ID }}
        VM-name: ${{ secrets.YC_VM_NAME }}
        vm-service-account-id: ${{ secrets.YC_SERVICE_ACCOUNT_ID }}
        vm-cores: 1
        vm-memory: 1Gb
        vm-core-fraction: 20
        vm-subnet-id: ${{ secrets.YC_SUBNET_ID }}
        docker-compose-path: './yandex-cloud/docker-compose.yc.yaml'
        user-data-path: './yandex-cloud/user-data.yaml'
